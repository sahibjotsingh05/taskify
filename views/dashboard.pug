doctype html
html
  head
    link(rel='preconnect', href='https://fonts.googleapis.com')
    link(rel='preconnect', href='https://fonts.gstatic.com', crossorigin='')
    link(href='https://fonts.googleapis.com/css2?family=Roboto&display=swap', rel='stylesheet')
    link(rel='stylesheet', href='/assets/css/style.css')
    meta(name='viewport', content='width=device-width, initial-scale=1.0')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@24,400,0,0')
    script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js')
    script(src='/assets/js/script.js')
  body
    input(type="hidden", value=`${day}`, id='hidden-day')
    input(type="hidden", value=`${month}`, id='hidden-month')
    input(type="hidden", value=`${year}`, id='hidden-year')
    .blackbody
    .popup#popup1
      span(style="margin-left: 95.6%;", id="cross1").material-symbols-outlined cancel
      br
      input(type="text", placeholder="Name", class="createTaskField", id='task-name')
      br
      input(type="text", placeholder="Description", class="createTaskField", id='task-description')
      br
      .createTaskText What Date is this Task ? (Optional)
      input(type="date", class="createTaskField", id="date-of-task")
      br
      .createTaskText Starting Time ? (Optional)
      input(type="time", class="createTaskField", id="startTime")
      br
      .createTaskText Ending Time ? (Optional)
      input(type="time", class="createTaskField", id="endTime")
      br
      .createTaskText Recurring ? (Optional)
      br
      .radiobtns
        input(type="radio", placeholder="",  name="reccuringBool", value="true")
        span Yes
        input(type="radio", placeholder="",  name="reccuringBool", value="false")
        span No
      br
      .createTaskText If Yes, When?
      br
      .radiobtns
        input(type="radio", placeholder="", name="reccuringType", value="Daily")
        span Daily
        input(type="radio", placeholder="", name="reccuringType", value="Weekly")
        span Weekly
        input(type="radio", placeholder="", name="reccuringType", value="Monthly")
        span Monthly
      br
      button(id="createTaskBtn") Create Task
    .staging-area
      .upperRow
        .calendarArea
          .wrapper
            .calendar-header
              p.current-date
              .icons
                span#prev.material-symbols-rounded chevron_left
                span#next.material-symbols-rounded chevron_right
            .calendar
              ul.weeks
                li Sun
                li Mon
                li Tue
                li Wed
                li Thu
                li Fri
                li Sat
              ul.days
        .todayTasks
          h2.taskHeading= istoday ? 'Today\'s Tasks' : 'Tasks Assigned This Day'
          .task-view.drag-containers
            each task in user.tasks
              if task.assignedDate
                - let curdate = new Date(year, (month -1 ), day)
                - let datex = new Date(task.assignedDate)
                
                
                if (datex.getUTCDate() == day && datex.getUTCMonth() + 1 == month && datex.getUTCFullYear() == year) || (curdate.getDay() == datex.getDay() && datex < curdate)
                  .task.draggable-task(draggable='true', data-taskid=`${task._id}`)
                    span.material-symbols-outlined.move-symbol
                      | drag_indicator
                    span.task-heading= `${task.name}`
                    .badges
                      if task.start || task.end
                        span.badge-restricted Restricted
                      if task.recurring
                        span.badge-recurring Recurring

        .unassignedTasks
          h2.taskHeading UNASSIGNED TASKS
          .task-view.drag-containers
            each task in user.tasks
              if !task.assignedDate
                .task.draggable-task(draggable='true', data-taskid=`${task._id}`)
                  span.material-symbols-outlined.move-symbol
                    | drag_indicator
                  span.task-heading= `${task.name}`
                  .badges
                    if task.start || task.end
                      span.badge-restricted Restricted
                    if task.recurring
                      span.badge-recurring Recurring
      .lowerRow
        .timeline
          .times
            each hour in ["12","01","02","03","04","05","06","07","08","09","10","11"]
              .hour
                .time= `${hour}:00 AM`
                .division
                .division
                .division
                .division
            each hour in ["12","01","02","03","04","05","06","07","08","09","10","11"]
              .hour
                .time= `${hour}:00 PM`
                .division
                .division
                .division
                .division
          .timetasks
            .task.timebasedtask
              span.material-symbols-outlined.move-symbol
                | drag_indicator
              span.task-heading Compe club Meeting
              .badges
                span.badge-restricted Restricted
            .task.timebasedtask
              span.material-symbols-outlined.move-symbol
                | drag_indicator
              span.task-heading Compe club Meeting
              .badges
                span.badge-restricted Restricted
            .task.timebasedtask
              span.material-symbols-outlined.move-symbol
                | drag_indicator
              span.task-heading Compe club Meeting
              .badges
                span.badge-restricted Restricted
        .widgets
          button.createTask#createMainBtn CREATE TASK